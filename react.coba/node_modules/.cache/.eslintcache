[{"/home/blk/Adi/react.coba/src/index.js":"1","/home/blk/Adi/react.coba/src/reportWebVitals.js":"2","/home/blk/Adi/react.coba/src/App.js":"3","/home/blk/Adi/react.coba/src/pages/Home.js":"4","/home/blk/Adi/react.coba/src/services/index.js":"5","/home/blk/Adi/react.coba/src/services/authServices.js":"6","/home/blk/Adi/react.coba/src/pages/Login1.js":"7","/home/blk/Adi/react.coba/src/Component/Registrasion.js":"8","/home/blk/Adi/react.coba/src/Component/Login.js":"9","/home/blk/Adi/react.coba/src/Component/Lupasandi.js":"10","/home/blk/Adi/react.coba/src/Component/Home.js":"11"},{"size":535,"mtime":1655956576448,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1655956576448,"results":"14","hashOfConfig":"13"},{"size":1597,"mtime":1658212139797,"results":"15","hashOfConfig":"13"},{"size":6766,"mtime":1657159549267,"results":"16","hashOfConfig":"13"},{"size":34,"mtime":1658198333046,"results":"17","hashOfConfig":"13"},{"size":2259,"mtime":1657159865682,"results":"18","hashOfConfig":"13"},{"size":362,"mtime":1657684816514,"results":"19","hashOfConfig":"13"},{"size":9307,"mtime":1658198238718,"results":"20","hashOfConfig":"13"},{"size":1833,"mtime":1658220694838,"results":"21","hashOfConfig":"13"},{"size":1464,"mtime":1657967320629,"results":"22","hashOfConfig":"13"},{"size":7850,"mtime":1658033991827,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17qm2xn",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/blk/Adi/react.coba/src/index.js",[],[],"/home/blk/Adi/react.coba/src/reportWebVitals.js",[],[],"/home/blk/Adi/react.coba/src/App.js",[],[],"/home/blk/Adi/react.coba/src/pages/Home.js",[],[],"/home/blk/Adi/react.coba/src/services/index.js",[],[],"/home/blk/Adi/react.coba/src/services/authServices.js",[],[],"/home/blk/Adi/react.coba/src/pages/Login1.js",["60"],[],"import React from \"react\";\nconst Login1 = () => {\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n};\n\nreturn (\n    <>\n        <container className=\"container-sm dp-flex\" style={{ width: \"438px\", height: \"844px\"}}>\n            <container>\n\n            </container>\n        </container>\n    </>\n)\nexport default Login1;",[],"/home/blk/Adi/react.coba/src/Component/Registrasion.js",["61","62","63","64","65","66","67","68","69"],[],"import { AutoComplete, Button,Cascader, Checkbox, Col, Form, Input, InputNumber, Row, Select, Card } from 'antd';\nimport React, { useState } from 'react';\n\n  \n  const { Option } = Select;\n  const residences = [\n    { value: 'pati', label: 'Pati',\n      children: [\n        { value: 'tayu', label: 'Tayu',\n          children: [\n            { value: 'sambiroto', label: 'Sambiroto' },\n            { value: 'tayu wetan', label: 'Tayu Wetan' },\n          ],\n        },\n      ],\n    },\n  ];\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 }, },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 8 }, },};\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n  };\n  \n  const Registrasion = () => {\n    const [form] = Form.useForm();\n  \n    const onFinish = (values) => {\n      console.log('Received values of form: ', values);\n    };\n  \n    // const prefixSelector = (\n    //   <Form.Item name=\"prefix\" noStyle>\n    //     <Select\n    //       style={{\n    //         width: 70,\n    //       }}\n    //     >\n    //       <Option value=\"86\">+86</Option>\n    //       <Option value=\"87\">+87</Option>\n    //     </Select>\n    //   </Form.Item>\n    // );\n    // const suffixSelector = (\n    //   <Form.Item name=\"suffix\" noStyle>\n    //     <Select\n    //       style={{\n    //         width: 70,\n    //       }}\n    //     >\n    //       <Option value=\"USD\">$</Option>\n    //       <Option value=\"CNY\">Â¥</Option>\n    //     </Select>\n    //   </Form.Item>\n    // );\n    const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n  \n    const onWebsiteChange = (value) => {\n      if (!value) {\n        setAutoCompleteResult([]);\n      } else {\n        setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\n      }\n    };\n  \n    const websiteOptions = autoCompleteResult.map((website) => ({\n      label: website,\n      value: website,\n    }));\n    \n    \n    return (\n      <div style={{padding: \"40px\", background: '#ececec'}}>\n        <Card\n        style={{width: 800,}}\n        >\n        <Form\n          {...formItemLayout}\n          form={form}\n          name=\"register\"\n          onFinish={onFinish}\n          initialValues={{\n            residence: ['zhejiang', 'hangzhou', 'xihu'],\n            prefix: '100',\n          }}\n          scrollToFirstError\n        >\n          <h1>Configure Your Organizational Profile</h1>\n          <Form.Item\n            name=\"nameOrganisation\"\n            label=\"Organisation Name\"\n            rules={[\n              {\n                type: 'text',\n                message: 'The input is not valid nameOrganisation',\n              },\n              {\n                required: true,\n                message: 'Please input your nameOrganisation',\n              },\n            ]}\n          >\n            <Input placeholder='Organisation Name'/>\n          </Form.Item>\n    \n          <Form.Item>\n            <Row gutter={8}>\n              <Col span={20}>\n              <Form.Item>\n                <label>Business Location :</label>\n                <Input placeholder='Business Location'/>\n              </Form.Item>\n              </Col>\n\n              <Col span={20}>\n              <Form.Item>\n                <label>State/Province :</label>\n                <Input placeholder='State/Province'/>\n              </Form.Item>\n              </Col>\n            </Row>\n          </Form.Item>\n\n          <h1>Regional Settings</h1>\n          \n          <Form.Item>\n            <Row gutter={50}>\n              <Col span={100}>\n                <Form.Item>\n                  <label>Currency</label>\n                  <Input placeholder='Currency' />\n                </Form.Item>\n              </Col>\n\n              <Col span={100}>\n                <Form.Item>\n                  <label>Language</label>\n                  <Input placeholder='Language' />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form.Item>\n\n          <Form.Item>\n            <label>Time Zone</label>\n            <Input type='text' placeholder='Time Zone' />\n          </Form.Item>\n          \n          {/* <Form.Item\n            name=\"confirm\"\n            label=\"Confirm Password\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n    \n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"nickname\"\n            label=\"Nickname\"\n            tooltip=\"What do you want others to call you?\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your nickname!',\n                whitespace: true,\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"residence\"\n            label=\"Habitual Residence\"\n            rules={[\n              {\n                type: 'array',\n                required: true,\n                message: 'Please select your habitual residence!',\n              },\n            ]}\n          >\n            <Cascader options={residences} />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"phone\"\n            label=\"Phone Number\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your phone number!',\n              },\n            ]}\n          >\n            <Input\n              addonBefore={prefixSelector}\n              style={{\n                width: '100%',\n              }}\n            />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"donation\"\n            label=\"Donation\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input donation amount!',\n              },\n            ]}\n          >\n            <InputNumber\n              addonAfter={suffixSelector}\n              style={{\n                width: '100%',\n              }}\n            />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"website\"\n            label=\"Website\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input website!',\n              },\n            ]}\n          >\n            <AutoComplete options={websiteOptions} onChange={onWebsiteChange} placeholder=\"website\">\n              <Input />\n            </AutoComplete>\n          </Form.Item>\n    \n          <Form.Item\n            name=\"intro\"\n            label=\"Intro\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input Intro',\n              },\n            ]}\n          >\n            <Input.TextArea showCount maxLength={100} />\n          </Form.Item>\n    \n          <Form.Item\n            name=\"gender\"\n            label=\"Gender\"\n            rules={[\n              {\n                required: true,\n                message: 'Please select gender!',\n              },\n            ]}\n          >\n            <Select placeholder=\"select your gender\">\n              <Option value=\"male\">Male</Option>\n              <Option value=\"female\">Female</Option>\n              <Option value=\"other\">Other</Option>\n            </Select>\n          </Form.Item>\n    \n          <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n            <Row gutter={8}>\n              <Col span={12}>\n                <Form.Item\n                  name=\"captcha\"\n                  noStyle\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the captcha you got!',\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Button>Get captcha</Button>\n              </Col>\n            </Row>\n          </Form.Item>\n    \n          <Form.Item\n            name=\"agreement\"\n            valuePropName=\"checked\"\n            rules={[\n              {\n                validator: (_, value) =>\n                  value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\n              },\n            ]}\n            {...tailFormItemLayout}\n          >\n            <Checkbox>\n              I have read the <a href=\"\">agreement</a>\n            </Checkbox>\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Register\n            </Button>\n          </Form.Item> */}\n        <Form.Item>\n          <Button type='primary'>Register</Button>\n        </Form.Item>\n        </Form>\n        </Card>\n      </div> \n    );\n  };\n  \n  export default Registrasion;","/home/blk/Adi/react.coba/src/Component/Login.js",[],[],"/home/blk/Adi/react.coba/src/Component/Lupasandi.js",[],[],"/home/blk/Adi/react.coba/src/Component/Home.js",["70","71","72","73"],[],{"ruleId":null,"fatal":true,"severity":2,"message":"74","line":16,"column":0},{"ruleId":"75","severity":1,"message":"76","line":1,"column":10,"nodeType":"77","messageId":"78","endLine":1,"endColumn":22},{"ruleId":"75","severity":1,"message":"79","line":1,"column":31,"nodeType":"77","messageId":"78","endLine":1,"endColumn":39},{"ruleId":"75","severity":1,"message":"80","line":1,"column":41,"nodeType":"77","messageId":"78","endLine":1,"endColumn":49},{"ruleId":"75","severity":1,"message":"81","line":1,"column":69,"nodeType":"77","messageId":"78","endLine":1,"endColumn":80},{"ruleId":"75","severity":1,"message":"82","line":5,"column":11,"nodeType":"77","messageId":"78","endLine":5,"endColumn":17},{"ruleId":"75","severity":1,"message":"83","line":6,"column":9,"nodeType":"77","messageId":"78","endLine":6,"endColumn":19},{"ruleId":"75","severity":1,"message":"84","line":25,"column":9,"nodeType":"77","messageId":"78","endLine":25,"endColumn":27},{"ruleId":"75","severity":1,"message":"85","line":71,"column":11,"nodeType":"77","messageId":"78","endLine":71,"endColumn":26},{"ruleId":"75","severity":1,"message":"86","line":79,"column":11,"nodeType":"77","messageId":"78","endLine":79,"endColumn":25},{"ruleId":"75","severity":1,"message":"87","line":37,"column":19,"nodeType":"77","messageId":"78","endLine":37,"endColumn":27},{"ruleId":"75","severity":1,"message":"88","line":37,"column":29,"nodeType":"77","messageId":"78","endLine":37,"endColumn":37},{"ruleId":"89","severity":2,"message":"90","line":90,"column":45,"nodeType":"77","messageId":"91","endLine":90,"endColumn":57},{"ruleId":"89","severity":2,"message":"92","line":91,"column":45,"nodeType":"77","messageId":"91","endLine":91,"endColumn":56},"Parsing error: 'import' and 'export' may only appear at the top level. (16:0)","no-unused-vars","'AutoComplete' is defined but never used.","Identifier","unusedVar","'Cascader' is defined but never used.","'Checkbox' is defined but never used.","'InputNumber' is defined but never used.","'Option' is assigned a value but never used.","'residences' is assigned a value but never used.","'tailFormItemLayout' is assigned a value but never used.","'onWebsiteChange' is assigned a value but never used.","'websiteOptions' is assigned a value but never used.","'editUser' is defined but never used.","'postUser' is defined but never used.","no-undef","'setIsEditing' is not defined.","undef","'setDataUser' is not defined."]